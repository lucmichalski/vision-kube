<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>eu.europeana.cloud</groupId>
        <artifactId>ecloud-service-mcs</artifactId>
        <version>0.4-SNAPSHOT</version>
    </parent>

    <artifactId>ecloud-service-mcs-rest</artifactId>
    <packaging>war</packaging>
    <name>Europeana Cloud: Metadata and Content Service REST</name>

    <properties>
        <main.directory>${project.parent.basedir}</main.directory>
    </properties>

    <profiles>
        <profile>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <id>persistent</id>
            <properties>
                <spring.config.dir>persistent</spring.config.dir>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>eu.europeana.cloud</groupId>
                    <artifactId>ecloud-service-mcs-persistent</artifactId>
                    <version>${project.version}</version>
                </dependency>
            </dependencies>
        </profile>


        <profile>
            <id>persistent-authorization</id>
            <activation>
                <activeByDefault>true</activeByDefault>
                <property>
                    <name>persistent-authorization</name>
                </property>
            </activation>
            <dependencies>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>2.6</version>
                        <executions>
                            <execution>
                                <id>copy-authorization-resources</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${basedir}/target/classes</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/resources/persistent-authorization</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>persistent-authentication</id>
            <activation>
                <activeByDefault>true</activeByDefault>
                <property>
                    <name>persistent-authentication</name>
                </property>
            </activation>
            <dependencies>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>2.6</version>
                        <executions>
                            <execution>
                                <id>copy-authentication-resources</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${basedir}/target/classes</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/resources/persistent-authentication</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>zookeeper</id>
            <properties>
                <spring.config.dir>zookeeper</spring.config.dir>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>eu.europeana.cloud</groupId>
                    <artifactId>ecloud-service-cos</artifactId>
                    <version>${project.version}</version>
                </dependency>
                <dependency>
                    <groupId>eu.europeana.cloud</groupId>
                    <artifactId>ecloud-service-mcs-persistent</artifactId>
                    <version>${project.version}</version>
                    <exclusions>
                        <exclusion>
                            <artifactId>zookeeper</artifactId>
                            <groupId>org.apache.zookeeper</groupId>
                        </exclusion>
                    </exclusions>
                </dependency>
                <dependency>
                    <!-- forked kafka with fixed appender issue KAFKA-847 -->
                    <!-- TODO ECL-317 -->
                    <groupId>eu.europeana.cloud.kafka</groupId>
                    <artifactId>kafka_2.10</artifactId>
                    <exclusions>
                        <exclusion>
                            <artifactId>zookeeper</artifactId>
                            <groupId>org.apache.zookeeper</groupId>
                        </exclusion>
                    </exclusions>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>standalone</id>
            <properties>
                <spring.config.dir>standalone</spring.config.dir>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>eu.europeana.cloud</groupId>
                    <artifactId>ecloud-service-mcs-persistent</artifactId>
                    <version>${project.version}</version>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>kafkaLogging</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>

            <dependencies>
                <dependency>
                    <groupId>eu.europeana.cloud</groupId>
                    <artifactId>ecloud-service-cos</artifactId>
                    <version>${project.version}</version>
                </dependency>
                <dependency>
                    <groupId>eu.europeana.cloud</groupId>
                    <artifactId>ecloud-service-mcs-persistent</artifactId>
                    <version>${project.version}</version>
                    <exclusions>
                        <exclusion>
                            <artifactId>zookeeper</artifactId>
                            <groupId>org.apache.zookeeper</groupId>
                        </exclusion>
                    </exclusions>
                </dependency>
                <dependency>
                    <!-- forked kafka with fixed appender issue KAFKA-847 -->
                    <!-- TODO ECL-317 -->
                    <groupId>eu.europeana.cloud.kafka</groupId>
                    <artifactId>kafka_2.10</artifactId>
                    <exclusions>
                        <exclusion>
                            <artifactId>zookeeper</artifactId>
                            <groupId>org.apache.zookeeper</groupId>
                        </exclusion>
                    </exclusions>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>2.6</version>
                        <executions>
                            <execution>
                                <id>copy-kafka-resources</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${basedir}/target/classes</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/resources/kafkaLogging</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>persistent/</exclude>
                    <exclude>standalone/</exclude>
                    <exclude>zookeeper/</exclude>
                    <exclude>persistent-authentication/</exclude>
                    <exclude>persistent-authorization/</exclude>
                    <exclude>kafkaLogging/</exclude>
                </excludes>
            </resource>
        </resources>
        <plugins>
            <!-- copies spring config file from path defined in profile to resources
                dir -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/classes</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources/${spring.config.dir}</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--configuration of miredot - REST API documentation generator. -->
            <plugin>
                <groupId>com.qmino</groupId>
                <artifactId>miredot-plugin</artifactId>
                <version>${version.miredotPlugin}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>restdoc</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <licence>
                        UHJvamVjdHxldS5ldXJvcGVhbmEuY2xvdWQuZWNsb3VkLXNlcnZpY2UtbWNzLXJlc3R8MjAxNy0wMS0xNXxmYWxzZSNNQzBDRkdyREJmZjZRdzQvTlJaVTliKzZjZ3E5bU5JSUFoVUFsZWZBMVhSaDI2UGpqVy9venppa0dqdDBIRlk9
                    </licence>
                    <restModel>
                        <httpStatusCodes>
                            <httpStatusCode>
                                <httpCode>405</httpCode>
                                <document>explicit:
                                    eu.europeana.cloud.service.mcs.exception.CannotModifyPersistentRepresentationException
                                </document>
                                <defaultMessage>Cannot modify persistent representation version.</defaultMessage>
                            </httpStatusCode>
                            <httpStatusCode>
                                <httpCode>405</httpCode>
                                <document>explicit:
                                    eu.europeana.cloud.service.mcs.exception.CannotPersistEmptyRepresentationException
                                </document>
                                <defaultMessage>Cannot persist representation version which does
                                    not have any file.
                                </defaultMessage>
                            </httpStatusCode>
                            <httpStatusCode>
                                <httpCode>409</httpCode>
                                <document>explicit:
                                    eu.europeana.cloud.service.mcs.exception.DataSetAlreadyExistsException
                                </document>
                                <defaultMessage>Cannot create data set because it already exists.</defaultMessage>
                            </httpStatusCode>
                            <httpStatusCode>
                                <httpCode>404</httpCode>
                                <document>explicit:
                                    eu.europeana.cloud.service.mcs.exception.DataSetNotExistsException
                                </document>
                                <defaultMessage>Requested data set not exists</defaultMessage>
                            </httpStatusCode>
                            <httpStatusCode>
                                <httpCode>409</httpCode>
                                <document>explicit:
                                    eu.europeana.cloud.service.mcs.exception.FileAlreadyExistsException
                                </document>
                                <defaultMessage>Cannot add file to representation version because
                                    it already exists.
                                </defaultMessage>
                            </httpStatusCode>
                            <httpStatusCode>
                                <httpCode>422</httpCode>
                                <document>explicit:
                                    eu.europeana.cloud.service.mcs.exception.FileContentHashMismatchException
                                </document>
                                <defaultMessage>Cannot process entity because content md5 and tag
                                    are not the same
                                </defaultMessage>
                            </httpStatusCode>
                            <httpStatusCode>
                                <httpCode>404</httpCode>
                                <document>explicit:
                                    eu.europeana.cloud.service.mcs.exception.FileNotExistsException
                                </document>
                                <defaultMessage>Requested file does not exist</defaultMessage>
                            </httpStatusCode>
                            <httpStatusCode>
                                <httpCode>405</httpCode>
                                <document>explicit:
                                    eu.europeana.cloud.service.mcs.exception.ProviderHasDataSetsException
                                </document>
                                <defaultMessage>Cannot delete provider because it has data sets
                                    assigned.
                                </defaultMessage>
                            </httpStatusCode>
                            <httpStatusCode>
                                <httpCode>405</httpCode>
                                <document>explicit:
                                    eu.europeana.cloud.service.mcs.exception.ProviderHasRecordsException
                                </document>
                                <defaultMessage>Cannot delete provider because there are
                                    representation versions in system created by this data provider.
                                </defaultMessage>
                            </httpStatusCode>
                            <httpStatusCode>
                                <httpCode>404</httpCode>
                                <document>explicit:
                                    eu.europeana.cloud.service.mcs.exception.ProviderNotExistsException
                                </document>
                                <defaultMessage>Requested data provider does not exist.</defaultMessage>
                            </httpStatusCode>
                            <httpStatusCode>
                                <httpCode>404</httpCode>
                                <document>explicit:
                                    eu.europeana.cloud.service.mcs.exception.RecordNotExistsException
                                </document>
                                <defaultMessage>Used cloud id is not registered in Unique
                                    Identifier Service
                                </defaultMessage>
                            </httpStatusCode>
                            <httpStatusCode>
                                <httpCode>409</httpCode>
                                <document>explicit:
                                    eu.europeana.cloud.service.mcs.exception.RepresentationAlreadyInSetException
                                </document>
                                <defaultMessage>Representation is already assigned into this data
                                    set.
                                </defaultMessage>
                            </httpStatusCode>
                            <httpStatusCode>
                                <httpCode>401</httpCode>
                                <document>explicit:
                                    eu.europeana.cloud.service.mcs.exception.AccessDeniedOrObjectDoesNotExistException
                                </document>
                                <defaultMessage>There is an attempt to access a resource without the proper permissions.
                                    or the resource does not exist at all .
                                </defaultMessage>
                            </httpStatusCode>
                            <httpStatusCode>
                                <httpCode>409</httpCode>
                                <document>explicit:
                                    eu.europeana.cloud.service.mcs.exception.ProviderAlreadyExistsException
                                </document>
                                <defaultMessage>Data provider with specified id already exists.</defaultMessage>
                            </httpStatusCode>
                            <httpStatusCode>
                                <httpCode>404</httpCode>
                                <document>explicit:
                                    eu.europeana.cloud.service.mcs.exception.RepresentationNotExistsException
                                </document>
                                <defaultMessage>Requested representation (or representation
                                    version) does not exist.
                                </defaultMessage>
                            </httpStatusCode>
                            <httpStatusCode>
                                <httpCode>404</httpCode>
                                <document>explicit:
                                    eu.europeana.cloud.service.mcs.exception.VersionNotExistsException
                                </document>
                                <defaultMessage>Requested representation version does not exist.</defaultMessage>
                            </httpStatusCode>
                            <httpStatusCode>
                                <httpCode>416</httpCode>
                                <document>explicit:
                                    eu.europeana.cloud.service.mcs.exception.WrongContentRangeException
                                </document>
                                <defaultMessage>Requested content range is beyond actual content.</defaultMessage>
                            </httpStatusCode>
                            <httpStatusCode>
                                <httpCode>500</httpCode>
                                <document>always</document>
                                <defaultMessage>The service call has not succeeded because of
                                    server side error.
                                </defaultMessage>
                            </httpStatusCode>
                            <httpStatusCode>
                                <httpCode>200</httpCode>
                                <document>get</document>
                                <defaultMessage>Service call has completed successfully, the
                                    requested entity is returned in response
                                </defaultMessage>
                            </httpStatusCode>
                            <httpStatusCode>
                                <httpCode>204</httpCode>
                                <document>delete</document>
                                <defaultMessage>Object deleted.</defaultMessage>
                            </httpStatusCode>
                        </httpStatusCodes>
                        <fieldVisibility>
                            <GETTER>PUBLIC_ONLY</GETTER>
                            <IS_GETTER>PUBLIC_ONLY</IS_GETTER>
                            <SETTER>PUBLIC_ONLY</SETTER>
                            <CREATOR>PUBLIC_ONLY</CREATOR>
                            <FIELD>PUBLIC_ONLY</FIELD>
                        </fieldVisibility>
                        <titleNamingStrategies>
                            <strategy>tag: summary</strategy>
                            <strategy>tag: title</strategy>
                            <strategy>firstsentence</strategy>
                        </titleNamingStrategies>
                        <externalSources>
                            <sourceDirs>
                                <sourceDir>${project.parent.parent.basedir}/common/src/main/java</sourceDir>
                            </sourceDirs>
                        </externalSources>
                    </restModel>
                    <analysis>
                        <checks>
                            <JAVADOC_MISSING_SUMMARY>warn</JAVADOC_MISSING_SUMMARY>
                            <JAVADOC_MISSING_INTERFACEDOCUMENTATION>warn</JAVADOC_MISSING_INTERFACEDOCUMENTATION>
                            <JAVADOC_MISSING_PARAMETER_DOCUMENTATION>warn</JAVADOC_MISSING_PARAMETER_DOCUMENTATION>
                            <JAVADOC_MISSING_EXCEPTION_DOCUMENTATION>warn</JAVADOC_MISSING_EXCEPTION_DOCUMENTATION>
                            <JAVADOC_MISSING_AUTHORS>warn</JAVADOC_MISSING_AUTHORS>
                            <JAXRS_MISSING_PRODUCES>warn</JAXRS_MISSING_PRODUCES>
                            <JAXRS_MISSING_CONSUMES>warn</JAXRS_MISSING_CONSUMES>
                            <REST_UNMAPPED_EXCEPTION>warn</REST_UNMAPPED_EXCEPTION>
                        </checks>
                    </analysis>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>eu.europeana.cloud</groupId>
            <artifactId>ecloud-common</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>eu.europeana.cloud</groupId>
            <artifactId>ecloud-service-commons</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>eu.europeana.cloud</groupId>
            <artifactId>ecloud-service-mcs-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>eu.europeana.cloud</groupId>
            <artifactId>ecloud-service-mcs-persistent</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Authentication + Authorization -->
        <dependency>
            <groupId>eu.europeana.cloud</groupId>
            <artifactId>ecloud-service-aas-authorization</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>eu.europeana.cloud</groupId>
            <artifactId>ecloud-service-aas-authentication</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <scope>compile</scope>
            <exclusions>
                <!--without jcl - because we use log4j through slf4j -->
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--Jersey -->
        <dependency>
            <groupId>org.glassfish.jersey.ext</groupId>
            <artifactId>jersey-spring3</artifactId>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-moxy</artifactId>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-multipart</artifactId>
        </dependency>

        <!--logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
        </dependency>
        <!-- SLF4J extensions -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-ext</artifactId>
            <version>1.7.5</version>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency>

        <!-- tests -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
            <version>${version.spring-framework}</version>
            <exclusions>
                <!--without jcl - because we use log4j through slf4j -->
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.cassandraunit</groupId>
            <artifactId>cassandra-unit</artifactId>
            <version>${version.cassandra-unit}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.kubek2k</groupId>
            <artifactId>springockito</artifactId>
            <version>1.0.8</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.test-framework.providers</groupId>
            <artifactId>jersey-test-framework-provider-grizzly2</artifactId>
            <version>${version.jersey}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.test-framework</groupId>
            <artifactId>jersey-test-framework-core</artifactId>
            <version>${version.jersey}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>pl.pragmatists</groupId>
            <artifactId>JUnitParams</artifactId>
            <version>${version.junitparams}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.qmino</groupId>
            <artifactId>miredot-annotations</artifactId>
            <version>1.3</version>
        </dependency>
    </dependencies>
</project>
