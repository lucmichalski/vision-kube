<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
                        http://www.springframework.org/schema/jee  http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
                        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd">
    
    <context:annotation-config/>    
	<context:property-placeholder properties-ref="configurationLoader"/>
    <context:component-scan base-package="eu.europeana.cloud.service.dls.rest"/>
    
    <!-- Solr -->
    <bean id="sorlConnector" class="eu.europeana.cloud.service.dls.solr.SolrConnectionProviderImpl">
        <constructor-arg name="solrUrl" value="${mcs.solr.url}" />
    </bean>

    <bean id="solrDAO" class="eu.europeana.cloud.service.dls.solr.SolrDAO"/>
    <bean id="searchRecordService" class="eu.europeana.cloud.service.dls.services.SearchRecordService"/>
    
    <!-- Kafka -->
    <bean id="customerWrapper" class="eu.europeana.cloud.service.dls.kafka.CustomerWrapper">
        <constructor-arg name="zookeeperList" value="${mcs.kafka.zookeeperList}" />
        <constructor-arg name="topic" value="${mcs.kafka.topic}" />
    </bean>
    <bean id="messageListener" class="eu.europeana.cloud.service.dls.kafka.KafkaMessageListener" />
    
    
    <!-- COS -->
	<bean id="zookeeperService" class="eu.europeana.cloud.service.coordination.ZookeeperService">
        <constructor-arg name="zookeeperAddress">
            <jee:jndi-lookup expected-type="java.lang.String" jndi-name="java:comp/env/cos/zookeeper/zookeeperAddress"/>
        </constructor-arg>
        
        <constructor-arg name="zookeeperConnectionTimeout">
            <jee:jndi-lookup expected-type="java.lang.Integer" jndi-name="java:comp/env/cos/zookeeper/zookeeperConnectionTimeout"/>
        </constructor-arg>
        <constructor-arg name="zookeeperSessionTimeout">
            <jee:jndi-lookup expected-type="java.lang.Integer" jndi-name="java:comp/env/cos/zookeeper/zookeeperSessionTimeout"/>
        </constructor-arg>
        
        <constructor-arg name="zookeeperPath">
            <jee:jndi-lookup expected-type="java.lang.String" jndi-name="java:comp/env/cos/zookeeper/zookeeperPath"/>
        </constructor-arg>
	</bean>
	
    <!-- 
        Advertises this DLS instance in Zookeeper 
        (OPTIONAL..., as noone ever contacts DLS specifically but usefull to have a list of all alive instances 
    -->
    
    <bean id="serviceToBeAdvertised" class="eu.europeana.cloud.service.coordination.ServiceProperties">
        <constructor-arg name="serviceName" value="DLS" />
        
        <constructor-arg name="listenAddress">
            <jee:jndi-lookup expected-type="java.lang.String" jndi-name="java:comp/env/cos/listenAddress"/>
        </constructor-arg>
        
        <constructor-arg name="datacenterLocation">
            <jee:jndi-lookup expected-type="java.lang.String" jndi-name="java:comp/env/cos/datacenterLocation"/>
        </constructor-arg>
    </bean>
    
    <bean id="serviceAdvertiser" class="eu.europeana.cloud.service.coordination.registration.ZookeeperServiceAdvertiser">
        <constructor-arg name="zookeeper" ref="zookeeperService"/>
  		<constructor-arg name="discoveryPath" value="/discovery"/>
        <constructor-arg name="serviceProperties" ref="serviceToBeAdvertised"/>
    </bean>
    
	<!-- Loads properties saved in Zookeeper  -->
	<bean id="configurationLoader" class="eu.europeana.cloud.service.coordination.configuration.ConfigurationLoader">
  		<property name="zookeeperService" ref="zookeeperService"/>
  		<property name="configurationSettingsPath" value="/configuration"/>
	</bean>
    
    <bean id="loggingConfigurator" class="eu.europeana.cloud.service.commons.logging.ZookeeperLoggingConfigurator">
        <constructor-arg name="serviceAdvertiser" ref="serviceAdvertiser"/>
        <constructor-arg name="kafkaBrokerList" value="${logging.kafkaBrokerList}"/>
        <constructor-arg name="kafkaTopicName" value="${logging.kafkaTopicName}"/>
    </bean>
	
    <import resource="classpath:kafka.xml" />
    <import resource="classpath:config.xml" />
    
</beans>         