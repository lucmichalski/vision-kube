<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>eu.europeana.cloud</groupId>
        <artifactId>ecloud-service-uis</artifactId>
        <version>0.4-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>ecloud-service-uis-rest</artifactId>
    <packaging>war</packaging>
    <name>Europeana Cloud: Unique Identifier Service REST</name>
    <properties>
        <version.org.glassfish.jersey.test-framework>2.3.1</version.org.glassfish.jersey.test-framework>
    </properties>

    <profiles>
        <profile>
            <id>persistent</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <spring.config.dir>persistent</spring.config.dir>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>eu.europeana.cloud</groupId>
                    <artifactId>ecloud-service-uis-persistent</artifactId>
                    <version>${project.version}</version>
                </dependency>
                <dependency>
                    <groupId>eu.europeana.cloud</groupId>
                    <artifactId>ecloud-service-cos</artifactId>
                    <version>${project.version}</version>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>persistent-authorization</id>
            <activation>
                <activeByDefault>true</activeByDefault>
                <property>
                    <name>persistent-authorization</name>
                </property>
            </activation>
            <dependencies>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>2.6</version>
                        <executions>
                            <execution>
                                <id>copy-authorization-resources</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${basedir}/target/classes</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/resources/persistent-authorization</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>persistent-authentication</id>
            <activation>
                <activeByDefault>true</activeByDefault>
                <property>
                    <name>persistent-authentication</name>
                </property>
            </activation>
            <dependencies>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>2.6</version>
                        <executions>
                            <execution>
                                <id>copy-authentication-resources</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${basedir}/target/classes</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/resources/persistent-authentication</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>inmemory-authentication</id>
            <activation>
                <property>
                    <name>inmemory-authentication</name>
                </property>
            </activation>
            <dependencies>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>2.6</version>
                        <executions>
                            <execution>
                                <id>copy-security-resources</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${basedir}/target/classes</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/resources/inmemory-authentication</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>zookeeper</id>
            <activation>
                <property>
                    <name>zookeeper</name>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>eu.europeana.cloud</groupId>
                    <artifactId>ecloud-service-cos</artifactId>
                    <version>${project.version}</version>
                </dependency>
                <!-- forked kafka with fixed appender issue KAFKA-847 -->
                <!-- TODO ECL-317 -->
                <dependency>
                    <groupId>eu.europeana.cloud.kafka</groupId>
                    <artifactId>kafka_2.10</artifactId>
                    <exclusions>
                        <exclusion>
                            <artifactId>zookeeper</artifactId>
                            <groupId>org.apache.zookeeper</groupId>
                        </exclusion>
                    </exclusions>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>2.6</version>
                        <executions>
                            <execution>
                                <id>copy-zookeeper-resources</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${basedir}/target/classes</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/resources/zookeeper</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>kafkaLogging</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>2.6</version>
                        <executions>
                            <execution>
                                <id>copy-kafka-resources</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${basedir}/target/classes</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/resources/kafkaLogging</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>eu.europeana.cloud</groupId>
            <artifactId>ecloud-service-uis-api</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>eu.europeana.cloud</groupId>
            <artifactId>ecloud-service-uis-persistent</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>eu.europeana.cloud</groupId>
            <artifactId>ecloud-common</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>eu.europeana.cloud</groupId>
            <artifactId>ecloud-service-commons</artifactId>
            <version>${project.version}</version>
        </dependency>
        

        <!-- Authentication + Authorization -->
        <dependency>
            <groupId>eu.europeana.cloud</groupId>
            <artifactId>ecloud-service-aas-authorization</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>eu.europeana.cloud</groupId>
            <artifactId>ecloud-service-aas-authentication</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!--logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
        </dependency>
        <!-- SLF4J extensions -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-ext</artifactId>
            <version>1.7.5</version>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency> 
        <!--for sending logs via kafka -->
        <dependency>
            <!-- forked kafka with fixed appender issue KAFKA-847 -->
            <!-- TODO ECL-317 -->
            <groupId>eu.europeana.cloud.kafka</groupId>
            <artifactId>kafka_2.10</artifactId>
        </dependency>


        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.ext</groupId>
            <artifactId>jersey-spring3</artifactId>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-moxy</artifactId>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-multipart</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <scope>compile</scope>
        </dependency>
        <!-- Testing -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.test-framework.providers</groupId>
            <artifactId>jersey-test-framework-provider-grizzly2</artifactId>
            <version>${version.org.glassfish.jersey.test-framework}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.test-framework</groupId>
            <artifactId>jersey-test-framework-core</artifactId>
            <version>${version.org.glassfish.jersey.test-framework}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.cassandraunit</groupId>
            <artifactId>cassandra-unit</artifactId>
            <version>${version.cassandra-unit}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.cassandraunit</groupId>
            <artifactId>cassandra-unit-spring</artifactId>
            <version>${version.cassandra-unit}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.jpountz.lz4</groupId>
            <artifactId>lz4</artifactId>
            <version>1.2.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.qmino</groupId>
            <artifactId>miredot-annotations</artifactId>
            <version>1.2</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${version.spring-framework}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>persistent/</exclude>
                    <exclude>inmemory/</exclude>
                    <exclude>zookeeper/</exclude>
                    <exclude>persistent-authentication/</exclude>
                    <exclude>persistent-authorization/</exclude>
                    <exclude>inmemory-authentication/</exclude>
                    <exclude>kafkaLogging/</exclude>
                </excludes>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>copy-spring-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/classes</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources/${spring.config.dir}</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <webResources>
                        <resource>
                            <filtering>true</filtering>
                            <directory>src/main/webapp</directory>
                            <includes>
                                <include>**/web.xml</include>
                            </includes>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.qmino</groupId>
                <artifactId>miredot-plugin</artifactId>
                <version>${version.miredotPlugin}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>restdoc</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <licence> <!-- MireDot free open source license, valid until 2017-01-15 -->
                        UHJvamVjdHxldS5ldXJvcGVhbmEuY2xvdWQuZWNsb3VkLXNlcnZpY2UtdWlzLXJlc3R8MjAxNy0wMS0xNXxmYWxzZSNNQ3dDRkdMbHdnL1VLTGw2RXVMZkZXYi93anBKaWQvMUFoUmNsYWxYZkN3TzFFRXlDWmdLbkpaelJiU3p6dz09
                    </licence>
                    <restModel>
                        <httpStatusCodes>
                            <httpStatusCode>
                                <httpCode>200</httpCode>
                                <document>always</document>
                                <defaultMessage>The service call has completed successfully.</defaultMessage>
                            </httpStatusCode>
                            <httpStatusCode>
                                <httpCode>404</httpCode>
                                <document>explicit:
                                    eu.europeana.cloud.service.uis.exception.CloudIdDoesNotExistException
                                </document>
                                <defaultMessage>Cloud Id Not Found</defaultMessage>
                            </httpStatusCode>
                            <httpStatusCode>
                                <httpCode>404</httpCode>
                                <document>explicit:
                                    eu.europeana.cloud.common.exceptions.ProviderDoesNotExistException
                                </document>
                                <defaultMessage>The supplied provider does not exist</defaultMessage>
                            </httpStatusCode>
                            <httpStatusCode>
                                <httpCode>409</httpCode>
                                <document>explicit:
                                    eu.europeana.cloud.service.uis.exception.RecordExistsException</document>
                                <defaultMessage>The record already exists</defaultMessage>
                            </httpStatusCode>
                            <httpStatusCode>
                                <httpCode>404</httpCode>
                                <document>explicit:
                                    eu.europeana.cloud.service.uis.exception.RecordIdDoesNotExistException</document>
                                <defaultMessage>The recordId does not exist</defaultMessage>
                            </httpStatusCode>
                            <httpStatusCode>
                                <httpCode>409</httpCode>
                                <document>explicit:
                                    eu.europeana.cloud.service.uis.exception.IdHasBeenMappedException</document>
                                <defaultMessage>The record Id for that provider has already been
                                    mapped to a cloud Id</defaultMessage>
                            </httpStatusCode>
                            <httpStatusCode>
                                <httpCode>409</httpCode>
                                <document>explicit:
                                    eu.europeana.cloud.service.uis.exception.CloudIdAlreadyExistException</document>
                                <defaultMessage>The cloudId already exists</defaultMessage>
                            </httpStatusCode>
                            <httpStatusCode>
                                <httpCode>500</httpCode>
                                <document>always</document>
                                <defaultMessage>Internal server exception. The service call did
                                    not succeed.</defaultMessage>
                            </httpStatusCode>
                        </httpStatusCodes>
                        <fieldVisibility>
                            <GETTER>PUBLIC_ONLY</GETTER>
                            <IS_GETTER>PUBLIC_ONLY</IS_GETTER>
                            <SETTER>PUBLIC_ONLY</SETTER>
                            <CREATOR>PUBLIC_ONLY</CREATOR>
                            <FIELD>PUBLIC_ONLY</FIELD>
                        </fieldVisibility>
                        <titleNamingStrategies>
                            <strategy>tag: summary</strategy>
                            <strategy>tag: title</strategy>
                            <strategy>firstsentence</strategy>
                        </titleNamingStrategies>
                        <externalSources>
                            <sourceDirs>
                                <sourceDir>${project.parent.parent.basedir}/common/src/main/java</sourceDir>
                            </sourceDirs>
                        </externalSources>
                    </restModel>
                    <analysis>
                        <checks>
                            <JAVADOC_MISSING_SUMMARY>warn</JAVADOC_MISSING_SUMMARY>
                            <JAVADOC_MISSING_INTERFACEDOCUMENTATION>warn</JAVADOC_MISSING_INTERFACEDOCUMENTATION>
                            <JAVADOC_MISSING_PARAMETER_DOCUMENTATION>warn</JAVADOC_MISSING_PARAMETER_DOCUMENTATION>
                            <JAVADOC_MISSING_EXCEPTION_DOCUMENTATION>warn</JAVADOC_MISSING_EXCEPTION_DOCUMENTATION>
                            <JAVADOC_MISSING_AUTHORS>warn</JAVADOC_MISSING_AUTHORS>
                            <JAXRS_MISSING_PRODUCES>warn</JAXRS_MISSING_PRODUCES>
                            <JAXRS_MISSING_CONSUMES>warn</JAXRS_MISSING_CONSUMES>
                            <REST_UNMAPPED_EXCEPTION>warn</REST_UNMAPPED_EXCEPTION>
                        </checks>
                    </analysis>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
