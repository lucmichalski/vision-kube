<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="features-from-audio">
	<title>Feature Extraction from Audio</title>

	<para>
	Just like images, we can extract features that can be used to get a higher-level
	understanding of the audio.  There are some features that have become de-facto in
	audio processing, and one of these is the Mel-Frequency Cepstrum Coefficients (MFCCs).
	They give an overview of the shape (or envelope) of the frequency components of the audio
	based on some perceptual scaling of the frequency domain. 
	</para>

	<para>
	OpenIMAJ provides an MFCC class based around the <emphasis role="strong">jAudio</emphasis>
	implementation. Unsurprisingly, it's called <code>MFCC</code>!  We can use it in exactly the
	same way as the FFT processor, so if you take the code from FFT example in the previous chapter
	you can change the FFT processor to be the MFCC processor. 
	</para>
	
	<programlisting>
		MFCC mfcc = new MFCC( xa );
		...
		while( (sc = mfcc.nextSampleChunk()) != null )
		{
			double[][] mfccs = mfcc.getLastGeneratedFeature();
			vis.setData( mfccs[0] );
		}
	</programlisting>
	
	<para>
	MFCCs were specifically developed for speech recognition tasks and so are much
	more suitable for describing speech signals than a sine wave sweep.  So, let's
	switch to using the <code>JavaSoundAudioGrabber</code> so we can speak into the
	computer.  Secondly, we'll fix the analysis window that we're using.  The literature
	shows that 30ms windows with 10ms overlaps are often used in speech processing.
	At 44.1KHz, 10ms is 441 samples, so we'll use the <code>FixedSizeSampleAudioProcessor</code>
	to deal with giving us the appropriate size sample chunks.
	</para>

	<programlisting>
		JavaSoundAudioGrabber jsag = new JavaSoundAudioGrabber( new AudioFormat( 16, 44.1, 1 ) );
		FixedSizeSampleAudioProcessor fssap = new FixedSizeSampleAudioProcessor( jsag, 441*3, 441 );
	</programlisting>

	<para>
	You should see that when you speak into the computer, the MFCCs show a noticeable change
	compared to the sine wave sweep.
	</para>
	
	<tip>
		<para>
		You might want to try fixing the axis of the visualisation bar graph using
		the method <code>setAxisLocation( 100 )</code>.
		</para>
	</tip>
	
	<mediaobject>
	  <imageobject condition="">
			<imagedata fileref="../../figs/audio-mfccs.png" format="PNG" 
				scale="100" align="center" contentwidth="7cm"/>
	  </imageobject>
	</mediaobject>

	<sect1 id="audio-features-exercises">
    	<title>Exercises</title>
    	<sect2 id="exercise-1-spectral-flux">
      		<title>Exercise 1: Spectral Flux</title>
      		<para>
      		Update the program to use the SpectralFlux feature. Set the bar visualisation
      		to use a maximum value of 0.0001. What do you think this feature is showing?
      		How would this feature be useful?
      		</para>
    	</sect2>
    </sect1>
	
</chapter>