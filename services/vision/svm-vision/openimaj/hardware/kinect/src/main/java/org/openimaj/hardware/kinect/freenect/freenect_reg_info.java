/**
 * Copyright (c) 2011, The University of Southampton and the individual contributors.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *
 *   * 	Redistributions of source code must retain the above copyright notice,
 * 	this list of conditions and the following disclaimer.
 *
 *   *	Redistributions in binary form must reproduce the above copyright notice,
 * 	this list of conditions and the following disclaimer in the documentation
 * 	and/or other materials provided with the distribution.
 *
 *   *	Neither the name of the University of Southampton nor the names of its
 * 	contributors may be used to endorse or promote products derived from this
 * 	software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package org.openimaj.hardware.kinect.freenect;

import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * <i>native declaration : /usr/include/stdint.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@SuppressWarnings("all")
@Library("freenect-combined") 
public class freenect_reg_info extends StructObject {
	public freenect_reg_info() {
		super();
	}
	/// not used by mapping algorithm
	@Field(0) 
	public int dx_center() {
		return this.io.getIntField(this, 0);
	}
	/// not used by mapping algorithm
	@Field(0) 
	public freenect_reg_info dx_center(int dx_center) {
		this.io.setIntField(this, 0, dx_center);
		return this;
	}
	@Field(1) 
	public int ax() {
		return this.io.getIntField(this, 1);
	}
	@Field(1) 
	public freenect_reg_info ax(int ax) {
		this.io.setIntField(this, 1, ax);
		return this;
	}
	@Field(2) 
	public int bx() {
		return this.io.getIntField(this, 2);
	}
	@Field(2) 
	public freenect_reg_info bx(int bx) {
		this.io.setIntField(this, 2, bx);
		return this;
	}
	@Field(3) 
	public int cx() {
		return this.io.getIntField(this, 3);
	}
	@Field(3) 
	public freenect_reg_info cx(int cx) {
		this.io.setIntField(this, 3, cx);
		return this;
	}
	@Field(4) 
	public int dx() {
		return this.io.getIntField(this, 4);
	}
	@Field(4) 
	public freenect_reg_info dx(int dx) {
		this.io.setIntField(this, 4, dx);
		return this;
	}
	@Field(5) 
	public int dx_start() {
		return this.io.getIntField(this, 5);
	}
	@Field(5) 
	public freenect_reg_info dx_start(int dx_start) {
		this.io.setIntField(this, 5, dx_start);
		return this;
	}
	@Field(6) 
	public int ay() {
		return this.io.getIntField(this, 6);
	}
	@Field(6) 
	public freenect_reg_info ay(int ay) {
		this.io.setIntField(this, 6, ay);
		return this;
	}
	@Field(7) 
	public int by() {
		return this.io.getIntField(this, 7);
	}
	@Field(7) 
	public freenect_reg_info by(int by) {
		this.io.setIntField(this, 7, by);
		return this;
	}
	@Field(8) 
	public int cy() {
		return this.io.getIntField(this, 8);
	}
	@Field(8) 
	public freenect_reg_info cy(int cy) {
		this.io.setIntField(this, 8, cy);
		return this;
	}
	@Field(9) 
	public int dy() {
		return this.io.getIntField(this, 9);
	}
	@Field(9) 
	public freenect_reg_info dy(int dy) {
		this.io.setIntField(this, 9, dy);
		return this;
	}
	@Field(10) 
	public int dy_start() {
		return this.io.getIntField(this, 10);
	}
	@Field(10) 
	public freenect_reg_info dy_start(int dy_start) {
		this.io.setIntField(this, 10, dy_start);
		return this;
	}
	@Field(11) 
	public int dx_beta_start() {
		return this.io.getIntField(this, 11);
	}
	@Field(11) 
	public freenect_reg_info dx_beta_start(int dx_beta_start) {
		this.io.setIntField(this, 11, dx_beta_start);
		return this;
	}
	@Field(12) 
	public int dy_beta_start() {
		return this.io.getIntField(this, 12);
	}
	@Field(12) 
	public freenect_reg_info dy_beta_start(int dy_beta_start) {
		this.io.setIntField(this, 12, dy_beta_start);
		return this;
	}
	/// not used by mapping algorithm
	@Field(13) 
	public int rollout_blank() {
		return this.io.getIntField(this, 13);
	}
	/// not used by mapping algorithm
	@Field(13) 
	public freenect_reg_info rollout_blank(int rollout_blank) {
		this.io.setIntField(this, 13, rollout_blank);
		return this;
	}
	/// not used by mapping algorithm
	@Field(14) 
	public int rollout_size() {
		return this.io.getIntField(this, 14);
	}
	/// not used by mapping algorithm
	@Field(14) 
	public freenect_reg_info rollout_size(int rollout_size) {
		this.io.setIntField(this, 14, rollout_size);
		return this;
	}
	@Field(15) 
	public int dx_beta_inc() {
		return this.io.getIntField(this, 15);
	}
	@Field(15) 
	public freenect_reg_info dx_beta_inc(int dx_beta_inc) {
		this.io.setIntField(this, 15, dx_beta_inc);
		return this;
	}
	@Field(16) 
	public int dy_beta_inc() {
		return this.io.getIntField(this, 16);
	}
	@Field(16) 
	public freenect_reg_info dy_beta_inc(int dy_beta_inc) {
		this.io.setIntField(this, 16, dy_beta_inc);
		return this;
	}
	@Field(17) 
	public int dxdx_start() {
		return this.io.getIntField(this, 17);
	}
	@Field(17) 
	public freenect_reg_info dxdx_start(int dxdx_start) {
		this.io.setIntField(this, 17, dxdx_start);
		return this;
	}
	@Field(18) 
	public int dxdy_start() {
		return this.io.getIntField(this, 18);
	}
	@Field(18) 
	public freenect_reg_info dxdy_start(int dxdy_start) {
		this.io.setIntField(this, 18, dxdy_start);
		return this;
	}
	@Field(19) 
	public int dydx_start() {
		return this.io.getIntField(this, 19);
	}
	@Field(19) 
	public freenect_reg_info dydx_start(int dydx_start) {
		this.io.setIntField(this, 19, dydx_start);
		return this;
	}
	@Field(20) 
	public int dydy_start() {
		return this.io.getIntField(this, 20);
	}
	@Field(20) 
	public freenect_reg_info dydy_start(int dydy_start) {
		this.io.setIntField(this, 20, dydy_start);
		return this;
	}
	@Field(21) 
	public int dxdxdx_start() {
		return this.io.getIntField(this, 21);
	}
	@Field(21) 
	public freenect_reg_info dxdxdx_start(int dxdxdx_start) {
		this.io.setIntField(this, 21, dxdxdx_start);
		return this;
	}
	@Field(22) 
	public int dydxdx_start() {
		return this.io.getIntField(this, 22);
	}
	@Field(22) 
	public freenect_reg_info dydxdx_start(int dydxdx_start) {
		this.io.setIntField(this, 22, dydxdx_start);
		return this;
	}
	@Field(23) 
	public int dxdxdy_start() {
		return this.io.getIntField(this, 23);
	}
	@Field(23) 
	public freenect_reg_info dxdxdy_start(int dxdxdy_start) {
		this.io.setIntField(this, 23, dxdxdy_start);
		return this;
	}
	@Field(24) 
	public int dydxdy_start() {
		return this.io.getIntField(this, 24);
	}
	@Field(24) 
	public freenect_reg_info dydxdy_start(int dydxdy_start) {
		this.io.setIntField(this, 24, dydxdy_start);
		return this;
	}
	/// not used by mapping algorithm
	@Field(25) 
	public int back_comp1() {
		return this.io.getIntField(this, 25);
	}
	/// not used by mapping algorithm
	@Field(25) 
	public freenect_reg_info back_comp1(int back_comp1) {
		this.io.setIntField(this, 25, back_comp1);
		return this;
	}
	@Field(26) 
	public int dydydx_start() {
		return this.io.getIntField(this, 26);
	}
	@Field(26) 
	public freenect_reg_info dydydx_start(int dydydx_start) {
		this.io.setIntField(this, 26, dydydx_start);
		return this;
	}
	/// not used by mapping algorithm
	@Field(27) 
	public int back_comp2() {
		return this.io.getIntField(this, 27);
	}
	/// not used by mapping algorithm
	@Field(27) 
	public freenect_reg_info back_comp2(int back_comp2) {
		this.io.setIntField(this, 27, back_comp2);
		return this;
	}
	@Field(28) 
	public int dydydy_start() {
		return this.io.getIntField(this, 28);
	}
	@Field(28) 
	public freenect_reg_info dydydy_start(int dydydy_start) {
		this.io.setIntField(this, 28, dydydy_start);
		return this;
	}
}
